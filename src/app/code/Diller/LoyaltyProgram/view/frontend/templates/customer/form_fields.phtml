<?php
    use Diller\LoyaltyProgram\Block\Frontend\Member;
    use DillerAPI\Model\MemberResponse;

    $loyaltyHelper = $this->helper('Diller\LoyaltyProgram\Helper\Data');
    
    /** @var \Magento\Framework\Escaper $escaper */
    
    // member details
    $is_member = false;
    /** @var Member $block */
    if($customer = $block->getCustomer()){
        $member = $loyaltyHelper->searchMemberByCustomerId($customer->getId());
        if($member){
            $is_member = $member->getConsent()->getGdprAccepted();
        }
    }

    if(!$is_member){
        // check if a parameter is present and if it came from diller
        $url_params = explode("/", $_SERVER["REQUEST_URI"]);
        $url_components = parse_url( $_SERVER["REQUEST_URI"]);
        if($url_components > 0) {
            if(array_key_exists('query', $url_components)){
                parse_str($url_components['query'], $loyalty_params);
                if(array_key_exists('token', $loyalty_params)){
                    $result = $loyaltyHelper->searchMemberByActivationToken($loyalty_params['token']);
                    if(!empty($result)){
                        $member = $result[0];
                        $is_member = $member->getConsent()->getGdprAccepted();
                        if(!$is_member && array_key_exists('dref', $loyalty_params) && $loyalty_params['dref'] === 'signup') $is_member = true;
                    }
                }
            }
        }
    }

    // store details
    $loyaltyDetails = $loyaltyHelper->getLoyaltyDetails();
    $storeSegments = $loyaltyHelper->getStoreSegments();
    $storeDepartments = $loyaltyHelper->getStoreDepartments();
?>
<?php if($loyaltyDetails) { ?>
    <fieldset id="loyaltyForm" class="fieldset account <?= $is_member ? ('update member_' . $member->getId()) : 'create' ?> ">
        <legend class="legend"><span><?= $loyaltyDetails['storeName'] ?></span></legend>
        <div class="loyalty field phonenumber <?= ($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) ? 'required' : '' ?>">
            <label class="label" for="loyalty_phone_number">
                <span><?= $escaper->escapeHtml(__('Phone number')) ?></span>
            </label>
            <div class="control">
                <input type="hidden" name="loyalty_phone_countrycode" id="loyalty_phone_countrycode" data-validate="{required:true}" value="<?= $is_member ? $member->getPhone()->getCountryCode() : '' ?>">
                <input type="text" name="loyalty_phone_number" id="loyalty_phone_number" data-validate="{<?= ($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) ? 'required:true' : '' ?>}" value="<?= $is_member ? $member->getPhone()->getNumber() : '' ?>" title="<?= $escaper->escapeHtmlAttr(__('Phone number')) ?>" class="input-text">
            </div>
        </div>

        <!-- OTP -->
        <div class="loyalty field otp" style="display:none">
            <div>
                <label class="label" for="otp">
                    <span><?= $escaper->escapeHtml(__('One Time Password (OTP)')) ?></span>
                </label>
                <div class="control">
                    <input type="password" name="otp" id="otp" title="<?= $escaper->escapeHtml(__('One Time Password (OTP)')) ?>" class="input-text">
                </div>
            </div>
            <a id="loyaltyMemberLogin"><?= $escaper->escapeHtml(__('Loyalty login')) ?></a>
        </div>

        <span id="loyalty-notification"></span>

        <!-- Birthdate -->
        <div class="loyalty field birth date">
            <label class="label" for="birth_date">
                <span><?= $escaper->escapeHtml(__('Birthdate')) ?></span>
            </label>
            <div class="control">
                <input type="date" name="birth_date" id="birth_date" value="<?= $is_member ? (($member->getBirthDate() != null) ? date_format($member->getBirthDate(),"Y-m-d") : '') : '' ?>" title="<?= $escaper->escapeHtmlAttr(__('Birthdate')) ?>" class="input-date">
            </div>
        </div>

        <!-- Gender -->
        <?php
        $genders = array(
            array("id" => 1, "name" => $escaper->escapeHtmlAttr(__('Male'))),
            array("id" => 2, "name" => $escaper->escapeHtmlAttr(__('Female'))),
            array("id" => 4, "name" => $escaper->escapeHtmlAttr(__('Non binary'))),
            array("id" => 3, "name" => $escaper->escapeHtmlAttr(__("Don't want to share"))),
        )
        ?>
        <div class="loyalty field options">
            <label class="label">
                <span><?= $escaper->escapeHtml(__('Gender')) ?></span>
            </label>
            <div class="control">
                <?php foreach($genders as $gender ){?>
                    <div class="option">
                        <input type="radio" name="gender" id="<?= $gender['id'] ?>" value="<?= $gender['name'] ?>" title="<?= $gender['name'] ?>" class="input-radio" <?= $is_member ? (($member->getGender() === $gender['name']) ? 'checked' : '') : '' ?>>
                        <label for="<?= $gender['id'] ?>"><?= $gender['name'] ?></label>
                    </div>
                <?php } ?>
            </div>
        </div>

        <!-- Address -->
        <div class="loyalty field half">
            <label class="label" for="address">
                <span><?= $escaper->escapeHtml(__('Address')) ?></span>
            </label>
            <div class="control">
                <input type="text" name="address" id="address" value="<?= $is_member ? $member->getAddress()->getStreet() : ''  ?>" title="<?= $escaper->escapeHtmlAttr(__('Address')) ?>" class="input-text">
            </div>
        </div>

        <!-- ZIPCODE -->
        <div class="loyalty field half">
            <label class="label" for="zip_code">
                <span><?= $escaper->escapeHtml(__('Zip Code')) ?></span>
            </label>
            <div class="control">
                <input type="text" name="zip_code" id="zip_code" value="<?= $is_member ? $member->getAddress()->getZipCode() : ''  ?>" title="<?= $escaper->escapeHtmlAttr(__('Zip Code')) ?>" class="input-text">
            </div>
        </div>

        <!-- CITY -->
        <div class="loyalty field half">
            <label class="label" for="city">
                <span><?= $escaper->escapeHtml(__('City')) ?></span>
            </label>
            <div class="control">
                <input type="text" name="city" id="city" value="<?= $is_member ? $member->getAddress()->getCity() : ''  ?>" title="<?= $escaper->escapeHtmlAttr(__('City')) ?>" class="input-text">
            </div>
        </div>

        <!-- COUNTRY -->
        <div class="loyalty field half">
            <label class="label" for="country">
                <span><?= $escaper->escapeHtml(__('Country')) ?></span>
            </label>
            <div class="control">
                <input type="hidden" name="country_code" id="country_code" />
                <input type="text" name="country" id="country" />
            </div>
        </div>

        <!-- SEGMENTS -->
        <?php foreach($storeSegments as $segment ){
            if ($segment['isVisibleToFollower']) {

                $memberResponse = ['value' => '', 'selectedOptions' => []];
                if($is_member){
                    foreach($member['segments'] as $segmentResponse){
                        if($segmentResponse['id'] == $segment['id']){
                            $memberResponse = $segmentResponse;
                            continue;
                        }
                    }
                }
                switch($segment['type']){
                    case ('DateTime'):
                        $segment_type = "date";
                        break;
                    case ('Dropdown'):
                        $segment_type = "select";
                        break;
                    case ('Radio'):
                        $segment_type = "radio";
                        break;
                    case ('Checkbox'):
                        $segment_type = "checkbox";
                        break;
                    default:
                        $segment_type = "text";
                } ?>
                <div class="loyalty field<?= ($segment_type === 'radio' || $segment_type === 'checkbox') ? ' options' : ''?> <?= (($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) && $segment->getIsRequired()) ? ' required' : '' ?> ">
                    <label class="label">
                        <span><?= $segment['text'] ?></span>
                    </label>
                    <div class="control">
                        <?php if($segment_type === "select"){ ?>
                            <select name="segment_<?= $segment['id'] ?>" id="segment_<?= $segment['id'] ?>" data-validate="{<?= (($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) && $segment->getIsRequired()) ? 'required:true' : '' ?>}">
                                <option value="">...</option>
                                <?php foreach($segment['options'] as $option ){ ?>
                                    <option id="segment_<?= $segment['id'] ?>_option_<?= $option['id'] ?>" value="<?= $option['id'] ?>" <?= ($memberResponse['value'] == $option['id']) ? 'selected' : '' ?>><?= $option['text'] ?></option>
                                <?php } ?>
                            </select>
                        <?php }elseif($segment_type === "checkbox" || $segment_type === "radio"){
                            foreach($segment['options'] as $option ){ ?>
                                <div class="option">
                                    <input
                                        type="<?= $segment_type ?>"
                                        name="<?= ($segment_type === "checkbox") ? "segment_" . $segment['id']."[]" : "segment_" . $segment['id'] ?>"
                                        id="segment_<?= $segment['id'] ?>_option_<?= $option['id'] ?>"
                                        value="<?= $option['id'] ?>"
                                        title="<?= $option['text'] ?>"
                                        class="input-<?= $segment_type ?>"
                                        data-validate="{<?= (($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) && $segment->getIsRequired()) ? 'required:true' : '' ?>}"
                                        <?php if((
                                                $segment_type === 'radio' &&
                                                $memberResponse['value'] == $option['id']
                                            ) || (
                                                $segment_type === 'checkbox' &&
                                                in_array($option['id'], $memberResponse['selectedOptions'])
                                            )){
                                            echo 'checked';
                                        } ?>
                                    >
                                    <label for="segment_<?= $segment['id'] ?>_option_<?= $option['id'] ?>"><?= $option['text'] ?></label>
                                </div>
                            <?php }
                        }elseif($segment_type === "date"){ ?>
                            <div class="control">
                                <input
                                        type="date"
                                        class="input-date"
                                        title="<?= $segment['id'] ?>"
                                        id="segment_<?= $segment['id'] ?>"
                                        name="segment_<?= $segment['id'] ?>"
                                        data-validate="{<?= (($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) && $segment->getIsRequired()) ? 'required:true' : '' ?>}"
                                        value="<?= $memberResponse['value'] ? date("Y-m-d", strtotime($memberResponse['value'])) : '' ?>">
                            </div>
                        <?php }else{ ?>
                            <div class="control">
                                <input
                                        type="<?= $segment_type ?>"
                                        title="<?= $segment['id'] ?>"
                                        id="segment_<?= $segment['id'] ?>"
                                        class="input-<?= $segment_type ?>"
                                        name="segment_<?= $segment['id'] ?>"
                                        value="<?= $memberResponse['value'] ?? '' ?>"
                                        data-validate="{<?= (($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) && $segment->getIsRequired()) ? 'required:true' : '' ?>}">
                            </div>
                        <?php } ?>
                    </div>
                </div>
            <?php } ?>
        <?php } ?>

        <!-- DEPARTMENTS -->
        <?php if (!empty($storeDepartments)) { ?>
            <div class="loyalty field options">
                <label class="label">
                    <span><?= $escaper->escapeHtml(__('Department')) ?></span>
                </label>
                <div class="control">
                    <?php foreach($storeDepartments as $option ){?>
                        <div class="option">
                            <input type="checkbox" name="department[]" id="department_<?= $option['id'] ?>" value="<?= $option['id'] ?>" title="<?= $option['name'] ?>" class="input-checkbox" <?= $is_member ? (in_array($option['id'], $member['departmentIds']) ? 'checked' : '') : '' ?>>
                            <label for="department_<?= $option['id'] ?>"><?= $option['name'] ?></label>
                        </div>
                    <?php } ?>
                </div>
            </div>
        <?php } ?>

        <div class="loyalty field options consent<?= ($loyaltyHelper->areLoyaltyFieldsMandatory() && !$is_member) ? ' required' : '' ?>">
            <label class="label">
                <span><?= $escaper->escapeHtml(__('Marketing consent')) ?></span>
            </label>
            <div class="control">
                <div class="option loyalty_consent">
                    <input type="checkbox"
                           name="loyalty_consent"
                           id="loyalty_consent"
                           class="checkbox"
                           data-validate="{<?= ($loyaltyHelper->areLoyaltyFieldsMandatory() && !$is_member) ? 'required:true' : '' ?>}"
                        <?= $is_member ? ($member->getConsent()->getGDPRAccepted() ? 'onclick="consentChange()" checked' : '') : '' ?>
                    >
                    <label for="loyalty_consent" class="label">
                        <span>
                            <?php
                                echo sprintf($escaper->escapeHtml(__("I want to join %s's loyalty program and receive benefits, offers and other marketing communications electronically, including email, SMS and the like.")), $loyaltyDetails['storeName']) ?> <?= sprintf($escaper->escapeHtml(__("Read our <a target='_blank' href='%s'>privacy policy here</a>"), ['a']), $loyaltyDetails["privacyPolicyUrl"]) ?> <?= ($loyaltyHelper->areLoyaltyFieldsMandatory() || $is_member) ? '*' : '';
                            ?>
                        </span>
                    </label>
                </div>
                <div class="option consent_order_history">
                    <input type="checkbox"
                           name="loyalty_consent_order_history"
                           id="loyalty_consent_order_history"
                           class="checkbox"
                        <?= $is_member ? ($member->getConsent()->getSaveOrderHistory() ? 'checked' : '') : '' ?>
                    >
                    <label for="loyalty_consent_order_history" class="label">
                        <span> <?= $escaper->escapeHtml(__("I want to get offers and benefits that suit me based on my preferences and purchase history.")) ?></span>
                    </label>
                </div>

                <div class="option consent_sms">
                    <input type="checkbox"
                           name="loyalty_consent_sms"
                           id="loyalty_consent_sms"
                           class="checkbox"
                        <?php if($is_member) echo $member->getConsent()->getReceiveSms() ? 'checked' : ''; ?>
                    >
                    <label for="loyalty_consent_sms" class="label">
                        <span> <?= $escaper->escapeHtml(__("SMS: I want to receive benefits, offers and other marketing electronically in connection with the customer club via SMS.")) ?></span>
                    </label>
                </div>
                <div class="option consent_email">
                    <input type="checkbox"
                           name="loyalty_consent_email"
                           id="loyalty_consent_email"
                           class="checkbox"
                        <?php if($is_member) echo $member->getConsent()->getReceiveEmail() ? 'checked' : ''; ?>
                    >
                    <label for="loyalty_consent_email" class="label">
                        <span> <?= $escaper->escapeHtml(__("E-mail: I want to receive benefits, offers and other marketing electronically in connection with the customer club by E-mail.")) ?></span>
                    </label>
                </div>
            </div>
        </div>
    </fieldset>
    <script type="text/javascript">
        // INTL phone number validation
        require(['jquery','intl'],function($){
            $(window).on('load', function() {
                const phoneNumberInput = window.activePhoneNumberInput = document.querySelector("input#loyalty_phone_number");
                const formId = phoneNumberInput.closest('form').id;
                const phoneCCElSibling = phoneNumberInput.previousElementSibling;
                const countryCodeInput = window.activeCountryCodeInput = (phoneCCElSibling && phoneCCElSibling.type === "hidden" && phoneCCElSibling.tagName === "INPUT")
                    ? phoneNumberInput.previousElementSibling
                    : phoneNumberInput.closest('.control > input[id^=loyalty_phone_number]');
                let lastphoneNumberSearched = 0;

                if (countryCodeInput) {
                    const iti = window.intlTelInput(phoneNumberInput, {
                        preferredCountries: ['no', 'us', 'ca', 'gb', 'se', 'dk', 'fi'],
                        separateDialCode: true,
                        formatOnDisplay: true,
                        autoPlaceholder: "off",
                        utilsScript: "<?= $block->getViewFileUrl('Diller_LoyaltyProgram::node_modules/intl-tel-input/build/js/utils.js') ?>"
                    });

                    // initialize existing phone number
                    if (phoneNumberInput.value) {
                        iti.setNumber(countryCodeInput.value + phoneNumberInput.value);
                    }
                    // phone number input listener
                    phoneNumberInput.addEventListener("blur", function (event) {
                        if(phoneNumberInput.value.length > 0){
                            setActiveItiInstance(event.target);

                            let dialCode = window.activeItiInstance.getSelectedCountryData().dialCode;
                            const phoneNumber = event.target.value.replace(/\D/g, '').replace("+" + dialCode, "");
                            if (window.activeItiInstance.getSelectedCountryData().iso2) {
                                phone_country_iso2_code = window.activeItiInstance.getSelectedCountryData().iso2.toUpperCase();
                                window.activeCountryCodeInput.value = "+" + window.activeItiInstance.getSelectedCountryData().dialCode.replace(/\+/i, "");
                                event.target.value = intlTelInputUtils.formatNumber(phoneNumber, phone_country_iso2_code, intlTelInputUtils.numberFormat.NATIONAL);
                            } else {
                                event.target.value = phoneNumber;
                            }

                            let phoneNumberToSearch = dialCode + phoneNumberInput.value.replace(" ", "");
                            if(window.activeItiInstance.isValidNumber()){
                                if(phoneNumberToSearch !== lastphoneNumberSearched){
                                    setLoyaltyNotification("<?= $escaper->escapeHtml(__("Looking for this phone number in our loyalty system")) ?>");
                                    lastphoneNumberSearched = phoneNumberToSearch;
                                    $.ajax({
                                        url: '<?php echo $this->getUrl('loyaltyprogram/member/search'); ?>',
                                        type: 'POST',
                                        showLoader: true,
                                        dataType: 'json',
                                        data : {phoneNumber: phoneNumberToSearch},
                                        success: function (response) {
                                            let memberForm = document.querySelector('#loyaltyForm');
                                            const requiredLoyaltyFields = document.querySelectorAll("#loyaltyForm > div:not(.phonenumber)");
                                            if(response.success && response.result.is_member){
                                                setLoyaltyNotification("<?= $escaper->escapeHtml(__("SMS sent to your phone number with the OTP")) ?>");
                                                memberForm.setAttribute("member_id", response.result.member_id);

                                                if(memberForm.classList.contains('create')) memberForm.classList.remove('create');
                                                if(memberForm.classList.contains('update')) memberForm.classList.remove('update');
                                                memberForm.classList.add('login');

                                                requiredLoyaltyFields.forEach((field) => {
                                                    if(field.classList.contains('required')){
                                                        field.classList.remove('required');
                                                        field.classList.add('previously_required');
                                                    }
                                                });
                                            }else{
                                                setLoyaltyNotification("<?= $escaper->escapeHtml(__("No member found with that phone number")) ?>");
                                                if(!memberForm.classList.contains('create')) memberForm.classList.add('create');
                                                if(memberForm.classList.contains('update')) memberForm.classList.remove('update');
                                                if(memberForm.classList.contains('login')) memberForm.classList.remove('login');

                                                requiredLoyaltyFields.forEach((field) => {
                                                    if(field.classList.contains('previously_required')){
                                                        field.classList.remove('previously_required');
                                                        field.classList.add('required');
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            }else{
                                setLoyaltyNotification("<?= $escaper->escapeHtml(__("Invalid phone number")) ?>");
                            }
                        }
                    });

                    document.querySelector("#loyaltyForm > div.otp #loyaltyMemberLogin").addEventListener("click", function (event) {
                        event.preventDefault();
                        let memberForm = document.querySelector('#loyaltyForm');
                        $.ajax({
                            url: '<?php echo $this->getUrl('loyaltyprogram/member/validateotp'); ?>',
                            type: 'POST',
                            showLoader: true,
                            dataType: 'json',
                            data : {
                                memberId: memberForm.getAttribute("member_id"),
                                otp: document.querySelector("#loyaltyForm > div.otp input").value
                            },
                            success: function (response) {
                                if(!response.success) {
                                    setLoyaltyNotification("<?= $escaper->escapeHtml(__("Invalid OTP")) ?>");
                                    return;
                                }

                                if(memberForm.classList.contains('login')) memberForm.classList.remove('login');
                                memberForm.classList.add('update');

                                // populate form fields with member details
                                let member = response.result;

                                let customerFirstName = document.querySelector('#firstname');
                                if(customerFirstName.value.length === 0 && member.first_name.length > 0){
                                    customerFirstName.value = member.first_name;
                                }
                                let customerLastName = document.querySelector('#lastname');
                                if(customerLastName.value.length === 0 && member.last_name.length > 0){
                                    customerLastName.value = member.last_name;
                                }
                                let customerEmail = document.querySelector('#email_address');
                                if(customerEmail && customerEmail.value.length === 0 && member.email.length > 0){
                                    customerEmail.value = member.email;
                                }

                                if(member.birth_date){
                                    let birthdate = new Date(member.birth_date);
                                    document.querySelector("#loyaltyForm > .field.birth.date input#birth_date").value = (birthdate.getFullYear() + '-' + birthdate.toLocaleString('default', { month: '2-digit' }) + '-' + birthdate.getDate());
                                }

                                if(member.gender){
                                    const genderOptions = document.querySelectorAll("#loyaltyForm input[type='radio'][name='gender']");
                                    genderOptions.forEach((genderOption) => {
                                        if(genderOption.value === member.gender){
                                            genderOption.checked = true;
                                        }
                                    });
                                }

                                // address
                                let customerAddress = document.querySelector('#loyaltyForm #address');
                                if(customerAddress.value.length === 0 && member.address.street.length > 0){
                                    customerAddress.value = member.address.street;
                                }
                                // zipcode
                                let customerAddressZipcode = document.querySelector('#loyaltyForm #zip_code');
                                if(customerAddressZipcode.value.length === 0 && member.address.zip_code.length > 0){
                                    customerAddressZipcode.value = member.address.zip_code;
                                }
                                // city
                                let customerAddressCity = document.querySelector('#loyaltyForm #city');
                                if(customerAddressCity.value.length === 0 && member.address.city.length > 0){
                                    customerAddressCity.value = member.address.city;
                                }
                                // country
                                let customerAddressCountry = document.querySelector('#loyaltyForm #country_code');
                                if(customerAddressCountry && member.address.country_code.length > 0){
                                    let countryInput = document.querySelector("#loyaltyForm #country");
                                    if(countryInput){
                                        countryInput.value = member.address.country_code.toLowerCase();
                                        countryInput.dispatchEvent(new Event('blur'))
                                    }
                                }

                                if(member.segments.length > 0){
                                    member.segments.forEach((segment) => {
                                        switch (segment.type){
                                            case "Checkbox":
                                                if(segment.selected_options.length > 0){
                                                    segment.selected_options.forEach((option) => {
                                                        let element = document.querySelector('#loyaltyForm input#segment_' + segment.id + "_option_" + option);
                                                        if(element){
                                                            element.checked = true;
                                                        }
                                                    });
                                                }
                                                break;
                                            default:
                                                let element = document.querySelector('#loyaltyForm #segment_' + segment.id);
                                                if(element && segment.value.length > 0){
                                                    element.value = segment.value;
                                                }
                                        }
                                    });
                                }

                                if(member.department_ids.length > 0){
                                    member.department_ids.forEach((department) => {
                                        let element = document.querySelector("#loyaltyForm #department_" + department);
                                        if(element){
                                            element.checked = true;
                                        }
                                    });
                                }


                                if(member.consent.gdpr_accepted){
                                    document.querySelector('#loyalty_consent').checked = true;
                                }
                                if(member.consent.save_order_history){
                                    document.querySelector('#loyalty_consent_order_history').checked = true;
                                }
                                if(member.consent.receive_sms){
                                    let consentSmsInput = document.querySelector('#loyalty_consent_sms');
                                    if(consentSmsInput) consentSmsInput.checked = true;
                                }
                                if(member.consent.receive_email){
                                    let consentEmailInput = document.querySelector('#loyalty_consent_email');
                                    if(consentEmailInput) consentEmailInput.checked = true;
                                }
                            }
                        });
                    });


                    phoneNumberInput.addEventListener("keypress", function (event) {
                        if (event.key === "Enter") {
                            event.target.blur();
                        }
                    });

                    phoneNumberInput.addEventListener("countrychange", function (event) {
                        setActiveItiInstance(event.target);

                        if (iti.getSelectedCountryData().iso2) {
                            phone_country_iso2_code = window.activeItiInstance.getSelectedCountryData().iso2.toUpperCase();
                        }
                        if (iti.getSelectedCountryData().dialCode) {
                            window.activeCountryCodeInput.value = "+" + window.activeItiInstance.getSelectedCountryData().dialCode.replace(/\+/i, "");
                        }
                    });
                    setActiveItiInstance(phoneNumberInput);

                    let setLoyaltyNotification = function(message) {
                        let loyaltyFormNotification = document.querySelector("#loyalty-notification");
                        loyaltyFormNotification.innerHTML = message;
                        setTimeout(function(){
                            loyaltyFormNotification.innerHTML = '';
                        }, 6000);
                    }

                    // force gdpr link to open in a new tab
                    let consentLink = document.querySelector('.loyalty_consent label span a');
                    if(consentLink){
                        consentLink.addEventListener("click", function (event) {
                            event.preventDefault();
                            window.open(consentLink.getAttribute('href'), "_blank");
                        });
                    }
                }
            });
            const setActiveItiInstance = function(inputField){
                if(inputField && inputField.closest(".iti")) {
                    const countryCodeInput = inputField.closest(".iti").previousElementSibling;
                    window.activeItiInstance = window.intlTelInputGlobals.getInstance(inputField);
                    window.activePhoneNumberInput = inputField;

                    if (countryCodeInput && countryCodeInput.type === "hidden" && countryCodeInput.tagName === "INPUT") {
                        window.activeCountryCodeInput = countryCodeInput;
                        if(window.activeItiInstance.getSelectedCountryData().dialCode) {
                            window.activeCountryCodeInput.value = "+" + window.activeItiInstance.getSelectedCountryData().dialCode.replace(/\+/i, "");
                        }
                    }
                }
            };
        });

        // Country select script
        require(['jquery','countryselect'],function($){
            $("input#country").countrySelect({
                defaultCountry: "<?= $is_member ? strtolower($member->getAddress()->getCountryCode() ?? 'no') : '' ?>",
                preferredCountries: ['no', 'us', 'ca', 'gb', 'se', 'dk', 'fi'],
                responsiveDropdown: true
            });
        });
    </script>

    <?php if ($is_member){ ?>
    <script>
        function consentChange() {
            var gdprConsent = document.getElementById('loyalty_consent');
            if (gdprConsent.checked != true) {
                let alertSelection = confirm("<?= $escaper->escapeHtml(__("Are you sure you want to leave our Loyalty Program? You will lose access to unique discounts, advantages and your membership progress and points.")) ?>");
                if (!alertSelection) {
                    gdprConsent.checked = true;
                }
            }
        }
    </script>
    <?php } ?>

    <link rel="stylesheet" type="text/css" href="<?= $block->getViewFileUrl('Diller_LoyaltyProgram::node_modules/intl-tel-input/build/css/intlTelInput.css') ?>" />
    <link rel="stylesheet" type="text/css" href="<?= $block->getViewFileUrl('Diller_LoyaltyProgram::node_modules/country-select-js/build/css/countrySelect.css') ?>" />
    <style>
        #loyalty-notification:empty {
            height:0 !important;
            overflow: hidden;
            min-height: unset;
        }
        #loyalty-notification {
            margin: -5px 0 20px;
            float:left;
            width:100%;
            transition: 0.2s all ease;
            padding-left: 20px;
            font-size: 13px;
            display: flex;
            align-items: center;
            gap: 7px;
            height: 30px;
            align-self: end;
            font-weight: 500;
        }
        #loyalty-notification:before {
            background-image: url(<?= $block->getViewFileUrl('Diller_LoyaltyProgram::img/info.svg') ?>);
            background-position: center center;
            background-repeat: no-repeat;
            background-size: contain;
            margin: 0 0 0 -20px;
            position: relative;
            height: 20px;
            content: "";
            width: 20px;
            float: left;
        }

        #loyaltyForm.create .option.consent_sms, #loyaltyForm.create .option.consent_email {
            display: none;
        }
        #loyaltyForm.update .loyalty.field.phonenumber input, #loyaltyForm.update .loyalty.field.phonenumber .iti__selected-flag {
            pointer-events: none;
            background: #ebebeb;
        }

        #loyaltyForm.login > div:not(.phonenumber){
            display:none;
        }
        #loyaltyForm.login > div.otp{
            display:flex !important;
        }
        #loyaltyForm > .loyalty.otp {
            align-items: flex-end;
            gap: 20px;
        }
        #loyaltyForm > .loyalty.otp > div {
            flex: auto;
        }
        #loyaltyForm > .loyalty.otp > div label {
            font-weight: 600;
            margin: 0 0 7px;
            float: left;
            width: 100%;
        }
        #loyaltyForm > .loyalty.otp > a{
            background-image: none;
            background: #1979c3;
            border: 1px solid #1979c3;
            color: #ffffff;
            cursor: pointer;
            display: inline-block;
            font-weight: 600;
            padding: 5px 15px;
            font-size: 1.4rem;
            box-sizing: border-box;
            vertical-align: middle;
            text-decoration:none;
            transition: 0.2s all ease;
        }
        #loyaltyForm > .loyalty.otp > a:hover{
            opacity:0.6
        }


        .field > .label{
            font-weight:bold;
        }
        .loyalty.field.options {
            float: left;
            width: 100%;
            display: block;
        }
        .loyalty.field.options > label {
            float: left;
            width: 100%;
        }
        .loyalty.field.options .control {
            margin-left: -5px;
            margin-right: -5px;
            float: left;
            width: 100%;
        }
        .loyalty.field.options .control > div {
            margin: 0 5px 5px;
            float: left;
        }

        /* intl */
        .control .iti {
            width: 100%;
        }

        fieldset#loyaltyForm {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }
        fieldset#loyaltyForm > * {
            flex: 100%;
            width: 100%;
            margin:0;
        }
        @media only screen and (min-width: 800px) {
            form.form-edit-account {
                margin: 0 0 50px;
            }
            fieldset#loyaltyForm {
                margin-bottom: 0;
            }
            fieldset#loyaltyForm > .half {
                flex: 45%;
            }
            .country-select {
                width: 100%;
            }
        }
    </style>
<?php } ?>